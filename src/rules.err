when   0 => Msg ("EOF expected");
when   1 => Msg ("ident expected");
when   2 => Msg ("number expected");
when   3 => Msg ("string expected");
when   4 => Msg ("';' expected");
when   5 => Msg ("'->' expected");
when   6 => Msg ("'*' expected");
when   7 => Msg ("'if' expected");
when   8 => Msg ("'then' expected");
when   9 => Msg ("'elsif' expected");
when  10 => Msg ("'and' expected");
when  11 => Msg ("'cpu' expected");
when  12 => Msg ("'gpu' expected");
when  13 => Msg ("'add' expected");
when  14 => Msg ("'remove' expected");
when  15 => Msg ("'to' expected");
when  16 => Msg ("'from' expected");
when  17 => Msg ("'set' expected");
when  18 => Msg ("'=' expected");
when  19 => Msg ("'~' expected");
when  20 => Msg ("'^' expected");
when  21 => Msg ("'<' expected");
when  22 => Msg ("'>' expected");
when  23 => Msg ("'PE' expected");
when  24 => Msg ("'slots' expected");
when  25 => Msg ("'resources' expected");
when  26 => Msg ("'reservation' expected");
when  27 => Msg ("'on' expected");
when  28 => Msg ("'off' expected");
when  29 => Msg ("'true' expected");
when  30 => Msg ("'false' expected");
when  31 => Msg ("',' expected");
when  32 => Msg ("'-' expected");
when  33 => Msg ("not expected");
when  34 => Msg ("invalid Boolean");
when  35 => Msg ("invalid Literal");
when  36 => Msg ("invalid RelOp");
when  37 => Msg ("invalid Property");
when  38 => Msg ("invalid Action");
when  39 => Msg ("invalid Action");
when  40 => Msg ("invalid State");
when  41 => Msg ("invalid WC_State");
when  42 => Msg ("invalid Rule");

